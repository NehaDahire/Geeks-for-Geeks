Given two linked lists of size N and M, which are sorted in non-decreasing order. The task is to merge them in such a way that the resulting list is in non-increasing order.

CODE:
class Solution
{
    public:
    
    struct Node * reverse(Node *head){
        Node *curr=head;
        Node *prev=NULL;
        while(curr!=NULL){
            Node *temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
    struct Node * mergeResult(Node *node1,Node *node2)
    {
      
        Node *head = newNode(-1);
        // head->data=0;
        // head->next=NULL;
  
        Node *tail = head;
        while(true){
            if(node1==NULL){
                tail->next=node2;
                break;
            }
            if(node2==NULL){
                tail->next=node1;
                break;
            }
            if(node1->data<node2->data){
                tail->next=node1;
                node1=node1->next;
            }
            else{
                tail->next=node2;
                node2=node2->next;
            }
            tail=tail->next;
        }
        
        return reverse(head->next);
    }  
};
