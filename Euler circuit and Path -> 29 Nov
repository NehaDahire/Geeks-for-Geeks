Problem of the day 29 November 2023
return 2 for eularian circuit , return 1 for path , return 0 else
CODE:
void dfs(int src,vector<int>adj[],bool visited[]){
    visited[src]=true;
    for(auto it: adj[src]){
        if(visited[it]==false){
            dfs(it,adj,visited);
        }
    }
}
int isconnected(int V, vector<int>adj[]){
    //finding a vertex with non zero degree
    int i=0;
    int flag=0;
    for(i=0;i<V;i++){
        if(adj[i].size()>0){
            flag=1;
            break;
        }
    }
    //vertices with all zero degree is eularian
    if(flag==0){
        return 1;
    }
    else{
        bool visited[V];
        memset(visited,false,sizeof(visited));
        dfs(i,adj,visited);
        for(int i=0;i<V;i++){
            if(visited[i]==false && adj[i].size()>0 ){
                return 0;
            }
        }
    }
}
class Solution {
public:
	int isEulerCircuit(int V, vector<int>adj[]){
	    // Code here
	    //connectivity check
	    if(!isconnected(V,adj)){
	        return 0;
	    }
	    else{
	        //odd degree check 
	        int odd=0;
	        for(int i=0;i<V;i++){
	            if(adj[i].size() & 1){
	                odd++;
	            }
	        }
	        if(odd==0){
	            return 2;
	        }
	        else if(odd==2){
	            return 1;
	        }
	        else{
	            return 0;
	        }
	    }
	}
};
